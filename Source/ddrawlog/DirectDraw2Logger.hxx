/*
Copyright (c) 2024 Eugene Kirian

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Base.hxx"

typedef struct DirectDraw2QueryInterfaceMethodValue
{
    GUID ID;
    LPVOID* Object;
} DIRECTDRAW2QUERYINTERFACEMETHODVALUE, * LPDIRECTDRAW2QUERYINTERFACEMETHODVALUE;

typedef struct DirectDraw2AddRefMethodValue
{

} DIRECTDRAW2ADDREFMETHODVALUE, * LPDIRECTDRAW2ADDREFMETHODVALUE;

typedef struct DirectDraw2ReleaseMethodValue
{

} DIRECTDRAW2RELEASEMETHODVALUE, * LPDIRECTDRAW2RELEASEMETHODVALUE;

typedef struct DirectDraw2CompactMethodValue
{

} DIRECTDRAW2COMPACTMETHODVALUE, * LPDIRECTDRAW2COMPACTMETHODVALUE;

typedef struct DirectDraw2CreateClipperMethodValue
{
    DWORD Options;
    LPDIRECTDRAWCLIPPER* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW2CREATECLIPPERMETHODVALUE, * LPDIRECTDRAW2CREATECLIPPERMETHODVALUE;

typedef struct DirectDraw2CreatePaletteMethodValue
{
    DWORD Options;
    LPPALETTEENTRY Colors;
    LPDIRECTDRAWPALETTE* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW2CREATEPALETTEMETHODVALUE, * LPDIRECTDRAW2CREATEPALETTEMETHODVALUE;

typedef struct DirectDraw2CreateSurfaceMethodValue
{
    LPDDSURFACEDESC Descriptor;
    LPDIRECTDRAWSURFACE* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW2CREATESURFACEMETHODVALUE, * LPDIRECTDRAW2CREATESURFACEMETHODVALUE;

typedef struct DirectDraw2DuplicateSurfaceMethodValue
{
    LPDIRECTDRAWSURFACE Object;
    LPDIRECTDRAWSURFACE* Duplicate;
} DIRECTDRAW2DUPLICATESURFACEMETHODVALUE, * LPDIRECTDRAW2DUPLICATESURFACEMETHODVALUE;

typedef struct DirectDraw2EnumDisplayModesMethodValue
{
    DWORD Options;
    LPDDSURFACEDESC Descriptor;
    LPVOID Context;
    LPDDENUMMODESCALLBACK EnumModesCallback;
} DIRECTDRAW2ENUMDISPLAYMODESMETHODVALUE, * LPDIRECTDRAW2ENUMDISPLAYMODESMETHODVALUE;

typedef struct DirectDraw2EnumSurfacesMethodValue
{
    DWORD Options;
    LPDDSURFACEDESC Descriptor;
    LPVOID Context;
    LPDDENUMSURFACESCALLBACK EnumSurfacesCallback;
} DIRECTDRAW2ENUMSURFACESMETHODVALUE, * LPDIRECTDRAW2ENUMSURFACESMETHODVALUE;

typedef struct DirectDraw2FlipToGDISurfaceMethodValue
{

} DIRECTDRAW2FLIPTOGDISURFACEMETHODVALUE, * LPDIRECTDRAW2FLIPTOGDISURFACEMETHODVALUE;

typedef struct DirectDraw2GetCapsMethodValue
{
    LPDDCAPS AccelerationDriverCaps;
    LPDDCAPS EmulationDricerCaps;
} DIRECTDRAW2GETCAPSMETHODVALUE, * LPDIRECTDRAW2GETCAPSMETHODVALUE;

typedef struct DirectDraw2GetDisplayModeMethodValue
{
    LPDDSURFACEDESC Descriptor;
} DIRECTDRAW2GETDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW2GETDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw2GetFourCCCodesMethodValue
{
    LPDWORD Count;
    LPDWORD Codes;
} DIRECTDRAW2GETFOURCCCODESMETHODVALUE, * LPDIRECTDRAW2GETFOURCCCODESMETHODVALUE;

typedef struct DirectDraw2GetGDISurfaceMethodValue
{
    LPDIRECTDRAWSURFACE* Surface;
} DIRECTDRAW2GETGDISURFACEMETHODVALUE, * LPDIRECTDRAW2GETGDISURFACEMETHODVALUE;

typedef struct DirectDraw2GetMonitorFrequencyMethodValue
{
    LPDWORD Frequency;
} DIRECTDRAW2GETMONITORFREQUENCYMETHODVALUE, * LPDIRECTDRAW2GETMONITORFREQUENCYMETHODVALUE;

typedef struct DirectDraw2GetScanLineMethodValue
{
    LPDWORD ScanLine;
} DIRECTDRAW2GETSCANLINEMETHODVALUE, * LPDIRECTDRAW2GETSCANLINEMETHODVALUE;

typedef struct DirectDraw2GetVerticalBlankStatusMethodValue
{
    LPBOOL IsInVerticalBlank;
} DIRECTDRAW2GETVERTICALBLANKSTATUSMETHODVALUE, * LPDIRECTDRAW2GETVERTICALBLANKSTATUSMETHODVALUE;

typedef struct DirectDraw2InitializeMethodValue
{
    LPGUID ID;
} DIRECTDRAW2INITIALIZEMETHODVALUE, * LPDIRECTDRAW2INITIALIZEMETHODVALUE;

typedef struct DirectDraw2RestoreDisplayModeMethodValue
{

} DIRECTDRAW2RESTOREDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW2RESTOREDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw2SetCooperativeLevelMethodValue
{
    HWND Window;
    DWORD Options;
} DIRECTDRAW2SETCOOPERATIVELEVELMETHODVALUE, * LPDIRECTDRAW2SETCOOPERATIVELEVELMETHODVALUE;

typedef struct DirectDraw2SetDisplayModeMethodValue
{
    DWORD Width;
    DWORD Height;
    DWORD Bits;
    DWORD RefreshRate;
    DWORD Options;
} DIRECTDRAW2SETDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW2SETDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw2WaitForVerticalBlankMethodValue
{
    DWORD Options;
    HANDLE Event;
} DIRECTDRAW2WAITFORVERTICALBLANKMETHODVALUE, * LPDIRECTDRAW2WAITFORVERTICALBLANKMETHODVALUE;

typedef struct DirectDraw2GetAvailableVidMemMethodValue
{
    LPDDSCAPS Caps;
    LPDWORD Total;
    LPDWORD Free;
} DIRECTDRAW2GETAVAILABLEVIDMEMMETHODVALUE, * LPDIRECTDRAW2GETAVAILABLEVIDMEMMETHODVALUE;

typedef struct DirectDraw2EnumDisplayModesMethodCallbackValue
{
    LPVOID Object;
    LPDDSURFACEDESC Descriptor;
} DIRECTDRAW2ENUMDISPLAYMODESMETHODCALLBACKVALUE, * LPDIRECTDRAW2ENUMDISPLAYMODESMETHODCALLBACKVALUE;

typedef struct DirectDraw2EnumSurfacesMethodCallbackValue
{
    LPVOID Object;
    LPDIRECTDRAWSURFACE Surface;
    LPDDSURFACEDESC Descriptor;
} DIRECTDRAW2ENUMSURFACESMETHODCALLBACKVALUE, * LPDIRECTDRAW2ENUMSURFACESMETHODCALLBACKVALUE;