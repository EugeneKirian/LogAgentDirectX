/*
Copyright (c) 2024 Eugene Kirian

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Base.hxx"

typedef struct Direct3DViewport3QueryInterfaceMethodValue
{
    GUID ID;
    LPVOID* Object;
} DIRECT3DVIEWPORT3QUERYINTERFACEMETHODVALUE, * LPDIRECT3DVIEWPORT3QUERYINTERFACEMETHODVALUE;

typedef struct Direct3DViewport3AddRefMethodValue
{

} DIRECT3DVIEWPORT3ADDREFMETHODVALUE, * LPDIRECT3DVIEWPORT3ADDREFMETHODVALUE;

typedef struct Direct3DViewport3ReleaseMethodValue
{

} DIRECT3DVIEWPORT3RELEASEMETHODVALUE, * LPDIRECT3DVIEWPORT3RELEASEMETHODVALUE;

typedef struct Direct3DViewport3InitializeMethodValue
{
    LPDIRECT3D Object;
} DIRECT3DVIEWPORT3INITIALIZEMETHODVALUE, * LPDIRECT3DVIEWPORT3INITIALIZEMETHODVALUE;

typedef struct Direct3DViewport3GetViewportMethodValue
{
    LPD3DVIEWPORT ViewPort;
} DIRECT3DVIEWPORT3GETVIEWPORTMETHODVALUE, * LPDIRECT3DVIEWPORT3GETVIEWPORTMETHODVALUE;

typedef struct Direct3DViewport3SetViewportMethodValue
{
    LPD3DVIEWPORT ViewPort;
} DIRECT3DVIEWPORT3SETVIEWPORTMETHODVALUE, * LPDIRECT3DVIEWPORT3SETVIEWPORTMETHODVALUE;

typedef struct Direct3DViewport3TransformVerticesMethodValue
{
    DWORD Count;
    LPD3DTRANSFORMDATA Transform;
    DWORD Options;
    LPDWORD Offscreen;
} DIRECT3DVIEWPORT3TRANSFORMVERTICESMETHODVALUE, * LPDIRECT3DVIEWPORT3TRANSFORMVERTICESMETHODVALUE;

typedef struct Direct3DViewport3LightElementsMethodValue
{
    DWORD Count;
    LPD3DLIGHTDATA Value;
} DIRECT3DVIEWPORT3LIGHTELEMENTSMETHODVALUE, * LPDIRECT3DVIEWPORT3LIGHTELEMENTSMETHODVALUE;

typedef struct Direct3DViewport3SetBackgroundMethodValue
{
    D3DMATERIALHANDLE Handle;
} DIRECT3DVIEWPORT3SETBACKGROUNDMETHODVALUE, * LPDIRECT3DVIEWPORT3SETBACKGROUNDMETHODVALUE;

typedef struct Direct3DViewport3GetBackgroundMethodValue
{
    LPD3DMATERIALHANDLE Handle;
    LPBOOL Valid;
} DIRECT3DVIEWPORT3GETBACKGROUNDMETHODVALUE, * LPDIRECT3DVIEWPORT3GETBACKGROUNDMETHODVALUE;

typedef struct Direct3DViewport3SetBackgroundDepthMethodValue
{
    LPDIRECTDRAWSURFACE Surface;
} DIRECT3DVIEWPORT3SETBACKGROUNDDEPTHMETHODVALUE, * LPDIRECT3DVIEWPORT3SETBACKGROUNDDEPTHMETHODVALUE;

typedef struct Direct3DViewport3GetBackgroundDepthMethodValue
{
    LPDIRECTDRAWSURFACE* Surface;
    LPBOOL Valid;
} DIRECT3DVIEWPORT3GETBACKGROUNDDEPTHMETHODVALUE, * LPDIRECT3DVIEWPORT3GETBACKGROUNDDEPTHMETHODVALUE;

typedef struct Direct3DViewport3ClearMethodValue
{
    DWORD Count;
    LPD3DRECT Rects;
    DWORD Options;
} DIRECT3DVIEWPORT3CLEARMETHODVALUE, * LPDIRECT3DVIEWPORT3CLEARMETHODVALUE;

typedef struct Direct3DViewport3AddLightMethodValue
{
    LPDIRECT3DLIGHT Light;
} DIRECT3DVIEWPORT3ADDLIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT3ADDLIGHTMETHODVALUE;

typedef struct Direct3DViewport3DeleteLightMethodValue
{
    LPDIRECT3DLIGHT Light;
} DIRECT3DVIEWPORT3DELETELIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT3DELETELIGHTMETHODVALUE;

typedef struct Direct3DViewport3NextLightMethodValue
{
    LPDIRECT3DLIGHT Light;
    LPDIRECT3DLIGHT* NextLight;
    DWORD Options;
} DIRECT3DVIEWPORT3NEXTLIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT3NEXTLIGHTMETHODVALUE;

typedef struct Direct3DViewport3GetViewport2MethodValue
{
    LPD3DVIEWPORT2 ViewPort;
} DIRECT3DVIEWPORT3GETVIEWPORT2METHODVALUE, * LPDIRECT3DVIEWPORT3GETVIEWPORT2METHODVALUE;

typedef struct Direct3DViewport3SetViewport2MethodValue
{
    LPD3DVIEWPORT2 ViewPort;
} DIRECT3DVIEWPORT3SETVIEWPORT2METHODVALUE, * LPDIRECT3DVIEWPORT3SETVIEWPORT2METHODVALUE;

typedef struct Direct3DViewport3SetBackgroundDepth2MethodValue
{
    LPDIRECTDRAWSURFACE4 Surface;
} DIRECT3DVIEWPORT3SETBACKGROUNDDEPTH2METHODVALUE, * LPDIRECT3DVIEWPORT3SETBACKGROUNDDEPTH2METHODVALUE;

typedef struct Direct3DViewport3GetBackgroundDepth2MethodValue
{
    LPDIRECTDRAWSURFACE4* Surface;
    LPBOOL Value;
} DIRECT3DVIEWPORT3GETBACKGROUNDDEPTH2METHODVALUE, * LPDIRECT3DVIEWPORT3GETBACKGROUNDDEPTH2METHODVALUE;

typedef struct Direct3DViewport3Clear2MethodValue
{
    DWORD Count;
    LPD3DRECT Rects;
    DWORD Options;
    DWORD Color;
    D3DVALUE Z;
    DWORD Stencil;
} DIRECT3DVIEWPORT3CLEAR2METHODVALUE, * LPDIRECT3DVIEWPORT3CLEAR2METHODVALUE;