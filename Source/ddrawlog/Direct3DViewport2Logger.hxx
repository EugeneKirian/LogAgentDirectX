/*
Copyright (c) 2024 Eugene Kirian

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Base.hxx"

typedef struct Direct3DViewport2QueryInterfaceMethodValue
{
    GUID ID;
    LPVOID* Object;
} DIRECT3DVIEWPORT2QUERYINTERFACEMETHODVALUE, * LPDIRECT3DVIEWPORT2QUERYINTERFACEMETHODVALUE;

typedef struct Direct3DViewport2AddRefMethodValue
{

} DIRECT3DVIEWPORT2ADDREFMETHODVALUE, * LPDIRECT3DVIEWPORT2ADDREFMETHODVALUE;

typedef struct Direct3DViewport2ReleaseMethodValue
{

} DIRECT3DVIEWPORT2RELEASEMETHODVALUE, * LPDIRECT3DVIEWPORT2RELEASEMETHODVALUE;

typedef struct Direct3DViewport2InitializeMethodValue
{
    LPDIRECT3D Object;
} DIRECT3DVIEWPORT2INITIALIZEMETHODVALUE, * LPDIRECT3DVIEWPORT2INITIALIZEMETHODVALUE;

typedef struct Direct3DViewport2GetViewportMethodValue
{
    LPD3DVIEWPORT ViewPort;
} DIRECT3DVIEWPORT2GETVIEWPORTMETHODVALUE, * LPDIRECT3DVIEWPORT2GETVIEWPORTMETHODVALUE;

typedef struct Direct3DViewport2SetViewportMethodValue
{
    LPD3DVIEWPORT ViewPort;
} DIRECT3DVIEWPORT2SETVIEWPORTMETHODVALUE, * LPDIRECT3DVIEWPORT2SETVIEWPORTMETHODVALUE;

typedef struct Direct3DViewport2TransformVerticesMethodValue
{
    DWORD Count;
    LPD3DTRANSFORMDATA Transform;
    DWORD Options;
    LPDWORD Offscreen;
} DIRECT3DVIEWPORT2TRANSFORMVERTICESMETHODVALUE, * LPDIRECT3DVIEWPORT2TRANSFORMVERTICESMETHODVALUE;

typedef struct Direct3DViewport2LightElementsMethodValue
{
    DWORD Count;
    LPD3DLIGHTDATA Value;
} DIRECT3DVIEWPORT2LIGHTELEMENTSMETHODVALUE, * LPDIRECT3DVIEWPORT2LIGHTELEMENTSMETHODVALUE;

typedef struct Direct3DViewport2SetBackgroundMethodValue
{
    D3DMATERIALHANDLE Handle;
} DIRECT3DVIEWPORT2SETBACKGROUNDMETHODVALUE, * LPDIRECT3DVIEWPORT2SETBACKGROUNDMETHODVALUE;

typedef struct Direct3DViewport2GetBackgroundMethodValue
{
    LPD3DMATERIALHANDLE Handle;
    LPBOOL Valid;
} DIRECT3DVIEWPORT2GETBACKGROUNDMETHODVALUE, * LPDIRECT3DVIEWPORT2GETBACKGROUNDMETHODVALUE;

typedef struct Direct3DViewport2SetBackgroundDepthMethodValue
{
    LPDIRECTDRAWSURFACE Surface;
} DIRECT3DVIEWPORT2SETBACKGROUNDDEPTHMETHODVALUE, * LPDIRECT3DVIEWPORT2SETBACKGROUNDDEPTHMETHODVALUE;

typedef struct Direct3DViewport2GetBackgroundDepthMethodValue
{
    LPDIRECTDRAWSURFACE* Surface;
    LPBOOL Valid;
} DIRECT3DVIEWPORT2GETBACKGROUNDDEPTHMETHODVALUE, * LPDIRECT3DVIEWPORT2GETBACKGROUNDDEPTHMETHODVALUE;

typedef struct Direct3DViewport2ClearMethodValue
{
    DWORD Count;
    LPD3DRECT Rects;
    DWORD Options;
} DIRECT3DVIEWPORT2CLEARMETHODVALUE, * LPDIRECT3DVIEWPORT2CLEARMETHODVALUE;

typedef struct Direct3DViewport2AddLightMethodValue
{
    LPDIRECT3DLIGHT Light;
} DIRECT3DVIEWPORT2ADDLIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT2ADDLIGHTMETHODVALUE;

typedef struct Direct3DViewport2DeleteLightMethodValue
{
    LPDIRECT3DLIGHT Light;
} DIRECT3DVIEWPORT2DELETELIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT2DELETELIGHTMETHODVALUE;

typedef struct Direct3DViewport2NextLightMethodValue
{
    LPDIRECT3DLIGHT Light;
    LPDIRECT3DLIGHT* NextLight;
    DWORD Options;
} DIRECT3DVIEWPORT2NEXTLIGHTMETHODVALUE, * LPDIRECT3DVIEWPORT2NEXTLIGHTMETHODVALUE;

typedef struct Direct3DViewport2GetViewport2MethodValue
{
    LPD3DVIEWPORT2 ViewPort;
} DIRECT3DVIEWPORT2GETVIEWPORT2METHODVALUE, * LPDIRECT3DVIEWPORT2GETVIEWPORT2METHODVALUE;

typedef struct Direct3DViewport2SetViewport2MethodValue
{
    LPD3DVIEWPORT2 ViewPort;
} DIRECT3DVIEWPORT2SETVIEWPORT2METHODVALUE, * LPDIRECT3DVIEWPORT2SETVIEWPORT2METHODVALUE;