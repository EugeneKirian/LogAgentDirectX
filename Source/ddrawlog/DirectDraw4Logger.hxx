/*
Copyright (c) 2024 Eugene Kirian

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Base.hxx"

typedef struct DirectDraw4QueryInterfaceMethodValue
{
    GUID ID;
    LPVOID* Object;
} DIRECTDRAW4QUERYINTERFACEMETHODVALUE, * LPDIRECTDRAW4QUERYINTERFACEMETHODVALUE;

typedef struct DirectDraw4AddRefMethodValue
{

} DIRECTDRAW4ADDREFMETHODVALUE, * LPDIRECTDRAW4ADDREFMETHODVALUE;

typedef struct DirectDraw4ReleaseMethodValue
{

} DIRECTDRAW4RELEASEMETHODVALUE, * LPDIRECTDRAW4RELEASEMETHODVALUE;

typedef struct DirectDraw4CompactMethodValue
{

} DIRECTDRAW4COMPACTMETHODVALUE, * LPDIRECTDRAW4COMPACTMETHODVALUE;

typedef struct DirectDraw4CreateClipperMethodValue
{
    DWORD Options;
    LPDIRECTDRAWCLIPPER* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW4CREATECLIPPERMETHODVALUE, * LPDIRECTDRAW4CREATECLIPPERMETHODVALUE;

typedef struct DirectDraw4CreatePaletteMethodValue
{
    DWORD Options;
    LPPALETTEENTRY Colors;
    LPDIRECTDRAWPALETTE* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW4CREATEPALETTEMETHODVALUE, * LPDIRECTDRAW4CREATEPALETTEMETHODVALUE;

typedef struct DirectDraw4CreateSurfaceMethodValue
{
    LPDDSURFACEDESC2 Descriptor;
    LPDIRECTDRAWSURFACE4* Object;
    LPUNKNOWN Unknown;
} DIRECTDRAW4CREATESURFACEMETHODVALUE, * LPDIRECTDRAW4CREATESURFACEMETHODVALUE;

typedef struct DirectDraw4DuplicateSurfaceMethodValue
{
    LPDIRECTDRAWSURFACE4 Object;
    LPDIRECTDRAWSURFACE4* Duplicate;
} DIRECTDRAW4DUPLICATESURFACEMETHODVALUE, * LPDIRECTDRAW4DUPLICATESURFACEMETHODVALUE;

typedef struct DirectDraw4EnumDisplayModesMethodValue
{
    DWORD Options;
    LPDDSURFACEDESC2 Descriptor;
    LPVOID Context;
    LPDDENUMMODESCALLBACK2 EnumModesCallback;
} DIRECTDRAW4ENUMDISPLAYMODESMETHODVALUE, * LPDIRECTDRAW4ENUMDISPLAYMODESMETHODVALUE;

typedef struct DirectDraw4EnumSurfacesMethodValue
{
    DWORD Options;
    LPDDSURFACEDESC2 Descriptor;
    LPVOID Context;
    LPDDENUMSURFACESCALLBACK2 EnumSurfacesCallback;
} DIRECTDRAW4ENUMSURFACESMETHODVALUE, * LPDIRECTDRAW4ENUMSURFACESMETHODVALUE;

typedef struct DirectDraw4FlipToGDISurfaceMethodValue
{

} DIRECTDRAW4FLIPTOGDISURFACEMETHODVALUE, * LPDIRECTDRAW4FLIPTOGDISURFACEMETHODVALUE;

typedef struct DirectDraw4GetCapsMethodValue
{
    LPDDCAPS AccelerationDriverCaps;
    LPDDCAPS EmulationDricerCaps;
} DIRECTDRAW4GETCAPSMETHODVALUE, * LPDIRECTDRAW4GETCAPSMETHODVALUE;

typedef struct DirectDraw4GetDisplayModeMethodValue
{
    LPDDSURFACEDESC2 Descriptor;
} DIRECTDRAW4GETDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW4GETDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw4GetFourCCCodesMethodValue
{
    LPDWORD Count;
    LPDWORD Codes;
} DIRECTDRAW4GETFOURCCCODESMETHODVALUE, * LPDIRECTDRAW4GETFOURCCCODESMETHODVALUE;

typedef struct DirectDraw4GetGDISurfaceMethodValue
{
    LPDIRECTDRAWSURFACE4* Surface;
} DIRECTDRAW4GETGDISURFACEMETHODVALUE, * LPDIRECTDRAW4GETGDISURFACEMETHODVALUE;

typedef struct DirectDraw4GetMonitorFrequencyMethodValue
{
    LPDWORD Frequency;
} DIRECTDRAW4GETMONITORFREQUENCYMETHODVALUE, * LPDIRECTDRAW4GETMONITORFREQUENCYMETHODVALUE;

typedef struct DirectDraw4GetScanLineMethodValue
{
    LPDWORD ScanLine;
} DIRECTDRAW4GETSCANLINEMETHODVALUE, * LPDIRECTDRAW4GETSCANLINEMETHODVALUE;

typedef struct DirectDraw4GetVerticalBlankStatusMethodValue
{
    LPBOOL IsInVerticalBlank;
} DIRECTDRAW4GETVERTICALBLANKSTATUSMETHODVALUE, * LPDIRECTDRAW4GETVERTICALBLANKSTATUSMETHODVALUE;

typedef struct DirectDraw4InitializeMethodValue
{
    LPGUID ID;
} DIRECTDRAW4INITIALIZEMETHODVALUE, * LPDIRECTDRAW4INITIALIZEMETHODVALUE;

typedef struct DirectDraw4RestoreDisplayModeMethodValue
{

} DIRECTDRAW4RESTOREDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW4RESTOREDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw4SetCooperativeLevelMethodValue
{
    HWND Window;
    DWORD Options;
} DIRECTDRAW4SETCOOPERATIVELEVELMETHODVALUE, * LPDIRECTDRAW4SETCOOPERATIVELEVELMETHODVALUE;

typedef struct DirectDraw4SetDisplayModeMethodValue
{
    DWORD Width;
    DWORD Height;
    DWORD Bits;
    DWORD RefreshRate;
    DWORD Options;
} DIRECTDRAW4SETDISPLAYMODEMETHODVALUE, * LPDIRECTDRAW4SETDISPLAYMODEMETHODVALUE;

typedef struct DirectDraw4WaitForVerticalBlankMethodValue
{
    DWORD Options;
    HANDLE Event;
} DIRECTDRAW4WAITFORVERTICALBLANKMETHODVALUE, * LPDIRECTDRAW4WAITFORVERTICALBLANKMETHODVALUE;

typedef struct DirectDraw4GetAvailableVidMemMethodValue
{
    LPDDSCAPS2 Caps;
    LPDWORD Total;
    LPDWORD Free;
} DIRECTDRAW4GETAVAILABLEVIDMEMMETHODVALUE, * LPDIRECTDRAW4GETAVAILABLEVIDMEMMETHODVALUE;

typedef struct DirectDraw4GetSurfaceFromDCMethodValue
{
    HDC DC;
    LPDIRECTDRAWSURFACE4* Surface;
} DIRECTDRAW4GETSURFACEFROMDCMETHODVALUE, * LPDIRECTDRAW4GETSURFACEFROMDCMETHODVALUE;

typedef struct DirectDraw4RestoreAllSurfacesMethodValue
{

} DIRECTDRAW4RESTOREALLSURFACESMETHODVALUE, * LPDIRECTDRAW4RESTOREALLSURFACESMETHODVALUE;

typedef struct DirectDraw4TestCooperativeLevelMethodValue
{

} DIRECTDRAW4TESTCOOPERATIVELEVELMETHODVALUE, * LPDIRECTDRAW4TESTCOOPERATIVELEVELMETHODVALUE;

typedef struct DirectDraw4GetDeviceIdentifierMethodValue
{
    LPDDDEVICEIDENTIFIER Identifier;
    DWORD Options;
} DIRECTDRAW4GETDEVICEIDENTIFIERMETHODVALUE, * LPDIRECTDRAW4GETDEVICEIDENTIFIERMETHODVALUE;

typedef struct DirectDraw4EnumDisplayModesMethodCallbackValue
{
    LPVOID Object;
    LPDDSURFACEDESC2 Descriptor;
} DIRECTDRAW4ENUMDISPLAYMODESMETHODCALLBACKVALUE, * LPDIRECTDRAW4ENUMDISPLAYMODESMETHODCALLBACKVALUE;

typedef struct DirectDraw4EnumSurfacesMethodCallbackValue
{
    LPVOID Object;
    LPDIRECTDRAWSURFACE4 Surface;
    LPDDSURFACEDESC2 Descriptor;
} DIRECTDRAW4ENUMSURFACESMETHODCALLBACKVALUE, * LPDIRECTDRAW4ENUMSURFACESMETHODCALLBACKVALUE;